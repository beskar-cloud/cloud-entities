- name: "Fetch all public OpenStack images"
  openstack.cloud.image_info:
    #admin_owner_id_filter is specified by image rotation
    #for fetching correct official images
    filters: "{{ {'visibility': 'public'} | combine(admin_owner_id_filter) if admin_owner_id_filter is defined else {'visibility': 'public'} }}"
  register: ostack_public_images_result

- set_fact:
    public_images_with_image_rotation_tags: []

- name: "Keep public OpenStack with image-rotation tags"
  set_fact:
    public_images_with_image_rotation_tags: "{{ public_images_with_image_rotation_tags + [i_public_ostack_image] }}"
  loop: "{{ ostack_public_images_result.images }}"
  loop_control:
    loop_var: i_public_ostack_image
  # Checking exactly for tag required by move to community task
  when: i_public_ostack_image.tags | select("search", "^image-rotation/move-to-community-([0-9]{4}-[0-9]{2}-[0-9]{2})$") | length == 1

- name: "Change obsolete public images to community"
  vars: 
    move_to_community_date_string: "{{ (i_tagged_public_ostack_image.tags | select('search', '^image-rotation/move-to-community-([0-9]{4}-[0-9]{2}-[0-9]{2})$'))[0] | regex_search('([0-9]{4}-[0-9]{2}-[0-9]{2})') }}"  
  openstack.cloud.image:
    id: "{{ i_tagged_public_ostack_image.id }}"
    visibility: "community"
  loop: "{{ public_images_with_image_rotation_tags }}"
  loop_control:
    loop_var: i_tagged_public_ostack_image
  # to_datetime conversions must be here otherwise Ansible converts
  # datetime objects into 'AnsibleUnsafeText' type
  when: ((move_to_community_date_string | to_datetime("%Y-%m-%d")) - (now(fmt="%Y-%m-%d") | to_datetime("%Y-%m-%d"))).days <= 0 


